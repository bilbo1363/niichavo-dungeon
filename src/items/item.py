"""
–°–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
"""
from dataclasses import dataclass
from enum import Enum
from typing import Optional


class ItemType(Enum):
    """–¢–∏–ø—ã –ø—Ä–µ–¥–º–µ—Ç–æ–≤"""
    WEAPON = "weapon"           # –û—Ä—É–∂–∏–µ
    CONSUMABLE = "consumable"   # –†–∞—Å—Ö–æ–¥—É–µ–º–æ–µ (–µ–¥–∞, –∑–µ–ª—å—è)
    KEY_ITEM = "key_item"       # –ö–ª—é—á–µ–≤–æ–π –ø—Ä–µ–¥–º–µ—Ç
    MATERIAL = "material"       # –ú–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è –∫—Ä–∞—Ñ—Ç–∞
    ARTIFACT = "artifact"       # –ê—Ä—Ç–µ—Ñ–∞–∫—Ç


class ItemRarity(Enum):
    """–†–µ–¥–∫–æ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç–∞"""
    COMMON = "common"       # –û–±—ã—á–Ω—ã–π (—Å–µ—Ä—ã–π)
    UNCOMMON = "uncommon"   # –ù–µ–æ–±—ã—á–Ω—ã–π (–∑–µ–ª—ë–Ω—ã–π)
    RARE = "rare"           # –†–µ–¥–∫–∏–π (—Å–∏–Ω–∏–π)
    EPIC = "epic"           # –≠–ø–∏—á–µ—Å–∫–∏–π (—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π)
    LEGENDARY = "legendary" # –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π (–æ—Ä–∞–Ω–∂–µ–≤—ã–π)


@dataclass
class Item:
    """–ö–ª–∞—Å—Å –ø—Ä–µ–¥–º–µ—Ç–∞"""
    
    id: str                          # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
    name: str                        # –ù–∞–∑–≤–∞–Ω–∏–µ
    description: str                 # –û–ø–∏—Å–∞–Ω–∏–µ
    item_type: ItemType              # –¢–∏–ø –ø—Ä–µ–¥–º–µ—Ç–∞
    rarity: ItemRarity = ItemRarity.COMMON
    
    # –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –æ—Ä—É–∂–∏—è
    damage: int = 0                  # –£—Ä–æ–Ω
    durability: int = 100            # –ü—Ä–æ—á–Ω–æ—Å—Ç—å
    max_durability: int = 100        # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ—á–Ω–æ—Å—Ç—å
    
    # –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ä–∞—Å—Ö–æ–¥—É–µ–º—ã—Ö
    heal_amount: int = 0             # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è
    endurance_amount: int = 0        # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏
    clarity_amount: int = 0          # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —è—Å–Ω–æ—Å—Ç–∏
    
    # –°–≤–æ–π—Å—Ç–≤–∞
    stackable: bool = False          # –ú–æ–∂–Ω–æ –ª–∏ —Å–∫–ª–∞–¥—ã–≤–∞—Ç—å –≤ —Å—Ç–æ–ø–∫—É
    max_stack: int = 1               # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Å—Ç–æ–ø–∫–∏
    weight: float = 1.0              # –í–µ—Å
    value: int = 0                   # –°—Ç–æ–∏–º–æ—Å—Ç—å
    
    def use(self, player) -> bool:
        """
        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç
        
        Args:
            player: –ò–≥—Ä–æ–∫
            
        Returns:
            True –µ—Å–ª–∏ –ø—Ä–µ–¥–º–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ
        """
        if self.item_type == ItemType.CONSUMABLE:
            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
            if self.heal_amount > 0:
                old_health = player.stats.health
                player.stats.health = min(
                    player.stats.max_health,
                    player.stats.health + self.heal_amount
                )
                healed = player.stats.health - old_health
                print(f"üíä –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ {healed} HP")
                
            if self.endurance_amount > 0:
                old_endurance = player.stats.endurance
                player.stats.endurance = min(
                    player.stats.max_endurance,
                    player.stats.endurance + self.endurance_amount
                )
                restored = player.stats.endurance - old_endurance
                print(f"‚ö° –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ {restored} –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏")
                
            if self.clarity_amount > 0:
                old_clarity = player.stats.clarity
                player.stats.clarity = min(100, player.stats.clarity + self.clarity_amount)
                restored = player.stats.clarity - old_clarity
                print(f"üß† –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ {restored} —è—Å–Ω–æ—Å—Ç–∏")
                
            return True
            
        return False
        
    def get_rarity_color(self) -> tuple:
        """
        –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç —Ä–µ–¥–∫–æ—Å—Ç–∏
        
        Returns:
            RGB —Ü–≤–µ—Ç
        """
        colors = {
            ItemRarity.COMMON: (150, 150, 150),      # –°–µ—Ä—ã–π
            ItemRarity.UNCOMMON: (50, 200, 50),      # –ó–µ–ª—ë–Ω—ã–π
            ItemRarity.RARE: (50, 100, 255),         # –°–∏–Ω–∏–π
            ItemRarity.EPIC: (200, 50, 255),         # –§–∏–æ–ª–µ—Ç–æ–≤—ã–π
            ItemRarity.LEGENDARY: (255, 150, 0)      # –û—Ä–∞–Ω–∂–µ–≤—ã–π
        }
        return colors.get(self.rarity, (255, 255, 255))


class ItemDatabase:
    """–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤"""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        self.items = {}
        self._init_items()
        
    def _init_items(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤"""
        # –û—Ä—É–∂–∏–µ
        self.items["rusty_pipe"] = Item(
            id="rusty_pipe",
            name="–†–∂–∞–≤–∞—è —Ç—Ä—É–±–∞",
            description="–°—Ç–∞—Ä–∞—è –≤–æ–¥–æ–ø—Ä–æ–≤–æ–¥–Ω–∞—è —Ç—Ä—É–±–∞. –õ—É—á—à–µ —á–µ–º –Ω–∏—á–µ–≥–æ.",
            item_type=ItemType.WEAPON,
            rarity=ItemRarity.COMMON,
            damage=5,
            durability=50,
            max_durability=50,
            weight=2.0,
            value=10
        )
        
        self.items["crowbar"] = Item(
            id="crowbar",
            name="–õ–æ–º",
            description="–ù–∞–¥—ë–∂–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç. –•–æ—Ä–æ—à–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –≤–∑–ª–æ–º–∞ –∏ —Å–∞–º–æ–æ–±–æ—Ä–æ–Ω—ã.",
            item_type=ItemType.WEAPON,
            rarity=ItemRarity.UNCOMMON,
            damage=10,
            durability=100,
            max_durability=100,
            weight=3.0,
            value=50
        )
        
        self.items["fire_axe"] = Item(
            id="fire_axe",
            name="–ü–æ–∂–∞—Ä–Ω—ã–π —Ç–æ–ø–æ—Ä",
            description="–¢—è–∂—ë–ª—ã–π —Ç–æ–ø–æ—Ä. –ù–∞–Ω–æ—Å–∏—Ç —Å–µ—Ä—å—ë–∑–Ω—ã–π —É—Ä–æ–Ω.",
            item_type=ItemType.WEAPON,
            rarity=ItemRarity.RARE,
            damage=20,
            durability=150,
            max_durability=150,
            weight=5.0,
            value=200
        )
        
        # –†–∞—Å—Ö–æ–¥—É–µ–º—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
        self.items["bandage"] = Item(
            id="bandage",
            name="–ë–∏–Ω—Ç",
            description="–ü—Ä–æ—Å—Ç–æ–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –±–∏–Ω—Ç. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 20 HP.",
            item_type=ItemType.CONSUMABLE,
            rarity=ItemRarity.COMMON,
            heal_amount=20,
            stackable=True,
            max_stack=10,
            weight=0.1,
            value=15
        )
        
        self.items["medkit"] = Item(
            id="medkit",
            name="–ê–ø—Ç–µ—á–∫–∞",
            description="–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è –∞–ø—Ç–µ—á–∫–∞. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 50 HP.",
            item_type=ItemType.CONSUMABLE,
            rarity=ItemRarity.UNCOMMON,
            heal_amount=50,
            stackable=True,
            max_stack=5,
            weight=0.5,
            value=50
        )
        
        self.items["energy_drink"] = Item(
            id="energy_drink",
            name="–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫",
            description="–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 30 –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏.",
            item_type=ItemType.CONSUMABLE,
            rarity=ItemRarity.COMMON,
            endurance_amount=30,
            stackable=True,
            max_stack=10,
            weight=0.3,
            value=20
        )
        
        self.items["coffee"] = Item(
            id="coffee",
            name="–ö–æ—Ñ–µ",
            description="–ö—Ä–µ–ø–∫–∏–π –∫–æ—Ñ–µ. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 10 —è—Å–Ω–æ—Å—Ç–∏.",
            item_type=ItemType.CONSUMABLE,
            rarity=ItemRarity.COMMON,
            clarity_amount=10,
            stackable=True,
            max_stack=10,
            weight=0.2,
            value=10
        )
        
        # ===== –ï–î–ê =====
        self.items["bread"] = Item(
            id="bread",
            name="–•–ª–µ–±",
            description="–ö—É—Å–æ–∫ —á—ë—Ä—Å—Ç–≤–æ–≥–æ —Ö–ª–µ–±–∞. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 10 HP.",
            item_type=ItemType.CONSUMABLE,
            rarity=ItemRarity.COMMON,
            heal_amount=10,
            stackable=True,
            max_stack=20,
            weight=0.2,
            value=5
        )
        
        self.items["canned_food"] = Item(
            id="canned_food",
            name="–ö–æ–Ω—Å–µ—Ä–≤—ã",
            description="–ö–æ–Ω—Å–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –µ–¥–∞. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 25 HP.",
            item_type=ItemType.CONSUMABLE,
            rarity=ItemRarity.COMMON,
            heal_amount=25,
            stackable=True,
            max_stack=10,
            weight=0.5,
            value=20
        )
        
        self.items["dried_meat"] = Item(
            id="dried_meat",
            name="–í—è–ª–µ–Ω–æ–µ –º—è—Å–æ",
            description="–°—É—à—ë–Ω–æ–µ –º—è—Å–æ. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 15 HP –∏ 10 –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏.",
            item_type=ItemType.CONSUMABLE,
            rarity=ItemRarity.UNCOMMON,
            heal_amount=15,
            endurance_amount=10,
            stackable=True,
            max_stack=15,
            weight=0.3,
            value=30
        )
        
        self.items["chocolate"] = Item(
            id="chocolate",
            name="–®–æ–∫–æ–ª–∞–¥",
            description="–ü–ª–∏—Ç–∫–∞ —à–æ–∫–æ–ª–∞–¥–∞. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 5 HP –∏ 20 –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏.",
            item_type=ItemType.CONSUMABLE,
            rarity=ItemRarity.COMMON,
            heal_amount=5,
            endurance_amount=20,
            stackable=True,
            max_stack=20,
            weight=0.1,
            value=15
        )
        
        self.items["apple"] = Item(
            id="apple",
            name="–Ø–±–ª–æ–∫–æ",
            description="–°–≤–µ–∂–µ–µ —è–±–ª–æ–∫–æ. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 8 HP.",
            item_type=ItemType.CONSUMABLE,
            rarity=ItemRarity.COMMON,
            heal_amount=8,
            stackable=True,
            max_stack=20,
            weight=0.2,
            value=8
        )
        
        self.items["water_bottle"] = Item(
            id="water_bottle",
            name="–ë—É—Ç—ã–ª–∫–∞ –≤–æ–¥—ã",
            description="–ß–∏—Å—Ç–∞—è –≤–æ–¥–∞. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 5 HP –∏ 15 –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏.",
            item_type=ItemType.CONSUMABLE,
            rarity=ItemRarity.COMMON,
            heal_amount=5,
            endurance_amount=15,
            stackable=True,
            max_stack=10,
            weight=0.5,
            value=10
        )
        
        self.items["hot_meal"] = Item(
            id="hot_meal",
            name="–ì–æ—Ä—è—á–∞—è –µ–¥–∞",
            description="–¢—ë–ø–ª–∞—è –¥–æ–º–∞—à–Ω—è—è –µ–¥–∞. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 40 HP –∏ 20 –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏.",
            item_type=ItemType.CONSUMABLE,
            rarity=ItemRarity.RARE,
            heal_amount=40,
            endurance_amount=20,
            stackable=True,
            max_stack=5,
            weight=1.0,
            value=80
        )
        
        self.items["protein_bar"] = Item(
            id="protein_bar",
            name="–ü—Ä–æ—Ç–µ–∏–Ω–æ–≤—ã–π –±–∞—Ç–æ–Ω—á–∏–∫",
            description="–ü–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–π –±–∞—Ç–æ–Ω—á–∏–∫. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 12 HP –∏ 25 –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏.",
            item_type=ItemType.CONSUMABLE,
            rarity=ItemRarity.UNCOMMON,
            heal_amount=12,
            endurance_amount=25,
            stackable=True,
            max_stack=15,
            weight=0.2,
            value=25
        )
        
        # ===== –ù–ê–ü–ò–¢–ö–ò =====
        self.items["tea"] = Item(
            id="tea",
            name="–ß–∞–π",
            description="–ì–æ—Ä—è—á–∏–π —á–∞–π. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 5 —è—Å–Ω–æ—Å—Ç–∏ –∏ 10 –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏.",
            item_type=ItemType.CONSUMABLE,
            rarity=ItemRarity.COMMON,
            clarity_amount=5,
            endurance_amount=10,
            stackable=True,
            max_stack=10,
            weight=0.2,
            value=12
        )
        
        self.items["juice"] = Item(
            id="juice",
            name="–°–æ–∫",
            description="–§—Ä—É–∫—Ç–æ–≤—ã–π —Å–æ–∫. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 10 HP –∏ 5 –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏.",
            item_type=ItemType.CONSUMABLE,
            rarity=ItemRarity.COMMON,
            heal_amount=10,
            endurance_amount=5,
            stackable=True,
            max_stack=10,
            weight=0.4,
            value=15
        )
        
        # –ö–ª—é—á–µ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
        self.items["master_key"] = Item(
            id="master_key",
            name="–ú–∞—Å—Ç–µ—Ä-–∫–ª—é—á",
            description="–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –ª—é–±—ã–µ –¥–≤–µ—Ä–∏ –≤ –∏–Ω—Å—Ç–∏—Ç—É—Ç–µ.",
            item_type=ItemType.KEY_ITEM,
            rarity=ItemRarity.RARE,
            weight=0.1,
            value=0
        )
        
        self.items["flashlight"] = Item(
            id="flashlight",
            name="–§–æ–Ω–∞—Ä–∏–∫",
            description="–û—Å–≤–µ—â–∞–µ—Ç —Ç—ë–º–Ω—ã–µ —ç—Ç–∞–∂–∏.",
            item_type=ItemType.KEY_ITEM,
            rarity=ItemRarity.UNCOMMON,
            weight=0.5,
            value=30
        )
        
        print(f"üì¶ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–∞: {len(self.items)} –ø—Ä–µ–¥–º–µ—Ç–æ–≤")
        
    def get_item(self, item_id: str) -> Optional[Item]:
        """
        –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç –ø–æ ID
        
        Args:
            item_id: ID –ø—Ä–µ–¥–º–µ—Ç–∞
            
        Returns:
            –ü—Ä–µ–¥–º–µ—Ç –∏–ª–∏ None
        """
        item = self.items.get(item_id)
        if item:
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–ø–∏—é —á—Ç–æ–±—ã –Ω–µ –∏–∑–º–µ–Ω—è—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª
            from copy import deepcopy
            return deepcopy(item)
        return None
        
    def list_items_by_type(self, item_type: ItemType) -> list[Item]:
        """
        –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø–æ —Ç–∏–ø—É
        
        Args:
            item_type: –¢–∏–ø –ø—Ä–µ–¥–º–µ—Ç–∞
            
        Returns:
            –°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
        """
        return [item for item in self.items.values() if item.item_type == item_type]


if __name__ == "__main__":
    # –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    db = ItemDatabase()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç
    pipe = db.get_item("rusty_pipe")
    print(f"\n–ü—Ä–µ–¥–º–µ—Ç: {pipe.name}")
    print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {pipe.description}")
    print(f"–£—Ä–æ–Ω: {pipe.damage}")
    print(f"–†–µ–¥–∫–æ—Å—Ç—å: {pipe.rarity.value}")
    
    # –°–ø–∏—Å–æ–∫ –æ—Ä—É–∂–∏—è
    weapons = db.list_items_by_type(ItemType.WEAPON)
    print(f"\n–û—Ä—É–∂–∏–µ ({len(weapons)}):")
    for weapon in weapons:
        print(f"  - {weapon.name}: {weapon.damage} —É—Ä–æ–Ω–∞")
