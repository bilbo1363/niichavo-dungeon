"""
–°–∏—Å—Ç–µ–º–∞ —Ä—É–Ω
"""
from dataclasses import dataclass
from enum import Enum
import pygame


class RuneType(Enum):
    """–¢–∏–ø—ã —Ä—É–Ω"""
    STABILITY = "stability"  # –†—É–Ω–∞ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ (–æ—Å–Ω–æ–≤–Ω–∞—è)
    FIRE = "fire"           # –û–≥–Ω–µ–Ω–Ω–∞—è —Ä—É–Ω–∞
    ICE = "ice"             # –õ–µ–¥—è–Ω–∞—è —Ä—É–Ω–∞
    LIGHTNING = "lightning" # –ú–æ–ª–Ω–∏–µ–≤–∞—è —Ä—É–Ω–∞
    EARTH = "earth"         # –ó–µ–º–ª—è–Ω–∞—è —Ä—É–Ω–∞


@dataclass
class Rune:
    """–ö–ª–∞—Å—Å —Ä—É–Ω—ã"""
    
    rune_type: RuneType
    x: int
    y: int
    collected: bool = False
    
    # –í–∏–∑—É–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    color: tuple = (255, 215, 0)  # –ó–æ–ª–æ—Ç–æ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    size: int = 20
    
    def __post_init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è"""
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        if self.rune_type == RuneType.STABILITY:
            self.color = (255, 215, 0)  # –ó–æ–ª–æ—Ç–æ–π
        elif self.rune_type == RuneType.FIRE:
            self.color = (255, 69, 0)   # –ö—Ä–∞—Å–Ω–æ-–æ—Ä–∞–Ω–∂–µ–≤—ã–π
        elif self.rune_type == RuneType.ICE:
            self.color = (0, 191, 255)  # –ì–æ–ª—É–±–æ–π
        elif self.rune_type == RuneType.LIGHTNING:
            self.color = (255, 255, 0)  # –ñ–µ–ª—Ç—ã–π
        elif self.rune_type == RuneType.EARTH:
            self.color = (139, 69, 19)  # –ö–æ—Ä–∏—á–Ω–µ–≤—ã–π
            
    def collect(self) -> None:
        """–°–æ–±—Ä–∞—Ç—å —Ä—É–Ω—É"""
        if not self.collected:
            self.collected = True
            print(f"‚ú® –°–æ–±—Ä–∞–Ω–∞ —Ä—É–Ω–∞: {self.rune_type.value}")
            
    def render(self, screen: pygame.Surface, camera_x: int = 0, camera_y: int = 0, fog_of_war=None) -> None:
        """
        –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Ä—É–Ω—ã
        
        Args:
            screen: –ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏
            camera_x: –°–º–µ—â–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã –ø–æ X
            camera_y: –°–º–µ—â–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã –ø–æ Y
            fog_of_war: –¢—É–º–∞–Ω –≤–æ–π–Ω—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
        """
        if self.collected:
            return  # –ù–µ —Ä–∏—Å—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω—É—é —Ä—É–Ω—É
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å —á–µ—Ä–µ–∑ fog of war
        if fog_of_war and not fog_of_war.is_visible(self.x, self.y):
            return  # –ù–µ —Ä–∏—Å—É–µ–º –µ—Å–ª–∏ –Ω–µ –≤–∏–¥–Ω–æ
            
        # –í—ã—á–∏—Å–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –Ω–∞ —ç–∫—Ä–∞–Ω–µ (—Ü–µ–Ω—Ç—Ä –∫–ª–µ—Ç–∫–∏)
        tile_size = 32
        screen_x = self.x * tile_size - camera_x + tile_size // 2
        screen_y = self.y * tile_size - camera_y + tile_size // 2
        
        # –†–∏—Å—É–µ–º —Ä—É–Ω—É –∫–∞–∫ —Ä–æ–º–± (diamond)
        points = [
            (screen_x, screen_y - self.size),      # –í–µ—Ä—Ö
            (screen_x + self.size, screen_y),      # –ü—Ä–∞–≤–æ
            (screen_x, screen_y + self.size),      # –ù–∏–∑
            (screen_x - self.size, screen_y)       # –õ–µ–≤–æ
        ]
        
        # –ó–∞–ª–∏–≤–∫–∞
        pygame.draw.polygon(screen, self.color, points)
        
        # –ö–æ–Ω—Ç—É—Ä
        pygame.draw.polygon(screen, (255, 255, 255), points, 2)
        
        # –≠—Ñ—Ñ–µ–∫—Ç —Å–≤–µ—á–µ–Ω–∏—è (–ø—É–ª—å—Å–∞—Ü–∏—è)
        import math
        import time
        pulse = abs(math.sin(time.time() * 3)) * 0.3 + 0.7
        glow_color = tuple(int(c * pulse) for c in self.color)
        
        # –í–Ω–µ—à–Ω–∏–π –∫–æ–Ω—Ç—É—Ä —Å–≤–µ—á–µ–Ω–∏—è
        glow_points = [
            (screen_x, screen_y - self.size - 3),
            (screen_x + self.size + 3, screen_y),
            (screen_x, screen_y + self.size + 3),
            (screen_x - self.size - 3, screen_y)
        ]
        pygame.draw.polygon(screen, glow_color, glow_points, 1)


class RuneManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä —Ä—É–Ω –Ω–∞ —É—Ä–æ–≤–Ω–µ"""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ä—É–Ω"""
        self.runes: list[Rune] = []
        
    def add_rune(self, rune: Rune) -> None:
        """
        –î–æ–±–∞–≤–∏—Ç—å —Ä—É–Ω—É
        
        Args:
            rune: –†—É–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        """
        self.runes.append(rune)
        
    def spawn_stability_rune(self, x: int, y: int) -> Rune:
        """
        –°–æ–∑–¥–∞—Ç—å —Ä—É–Ω—É —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏
        
        Args:
            x: –ü–æ–∑–∏—Ü–∏—è X
            y: –ü–æ–∑–∏—Ü–∏—è Y
            
        Returns:
            –°–æ–∑–¥–∞–Ω–Ω–∞—è —Ä—É–Ω–∞
        """
        rune = Rune(RuneType.STABILITY, x, y)
        self.add_rune(rune)
        print(f"üîÆ –†—É–Ω–∞ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –ø–æ—è–≤–∏–ª–∞—Å—å –Ω–∞ ({x}, {y})")
        return rune
        
    def check_collection(self, player_x: int, player_y: int) -> list[Rune]:
        """
        –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–±–æ—Ä —Ä—É–Ω –∏–≥—Ä–æ–∫–æ–º
        
        Args:
            player_x: –ü–æ–∑–∏—Ü–∏—è –∏–≥—Ä–æ–∫–∞ X
            player_y: –ü–æ–∑–∏—Ü–∏—è –∏–≥—Ä–æ–∫–∞ Y
            
        Returns:
            –°–ø–∏—Å–æ–∫ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö —Ä—É–Ω
        """
        collected = []
        
        for rune in self.runes:
            if not rune.collected and rune.x == player_x and rune.y == player_y:
                rune.collect()
                collected.append(rune)
                
        return collected
        
    def get_uncollected_count(self) -> int:
        """
        –ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ—Å–æ–±—Ä–∞–Ω–Ω—ã—Ö —Ä—É–Ω
        
        Returns:
            –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ—Å–æ–±—Ä–∞–Ω–Ω—ã—Ö —Ä—É–Ω
        """
        return sum(1 for rune in self.runes if not rune.collected)
        
    def render(self, screen: pygame.Surface, camera_x: int = 0, camera_y: int = 0, fog_of_war=None) -> None:
        """
        –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –≤—Å–µ—Ö —Ä—É–Ω
        
        Args:
            screen: –ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏
            camera_x: –°–º–µ—â–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã –ø–æ X
            camera_y: –°–º–µ—â–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã –ø–æ Y
            fog_of_war: –¢—É–º–∞–Ω –≤–æ–π–Ω—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
        """
        for rune in self.runes:
            rune.render(screen, camera_x, camera_y, fog_of_war)


if __name__ == "__main__":
    # –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Ä—É–Ω
    manager = RuneManager()
    
    # –°–æ–∑–¥–∞—ë–º —Ä—É–Ω—É —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏
    rune = manager.spawn_stability_rune(10, 10)
    print(f"–†—É–Ω–∞ —Å–æ–∑–¥–∞–Ω–∞: {rune.rune_type.value}")
    print(f"–¶–≤–µ—Ç: {rune.color}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–±–æ—Ä
    collected = manager.check_collection(10, 10)
    print(f"–°–æ–±—Ä–∞–Ω–æ —Ä—É–Ω: {len(collected)}")
    print(f"–ù–µ—Å–æ–±—Ä–∞–Ω–Ω—ã—Ö —Ä—É–Ω: {manager.get_uncollected_count()}")
